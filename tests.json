{"data": [{"type": "report", "id": 1, "attributes": {"environment": {"Python": "3.11.5", "Platform": "macOS-14.2-arm64-arm-64bit"}, "summary": {"error": 70, "num_tests": 70, "duration": 0.5845029354095459}, "created_at": "2024-04-09 18:15:54.713651"}, "relationships": {"tests": {"data": [{"id": 1, "type": "test"}, {"id": 2, "type": "test"}, {"id": 3, "type": "test"}, {"id": 4, "type": "test"}, {"id": 5, "type": "test"}, {"id": 6, "type": "test"}, {"id": 7, "type": "test"}, {"id": 8, "type": "test"}, {"id": 9, "type": "test"}, {"id": 10, "type": "test"}, {"id": 11, "type": "test"}, {"id": 12, "type": "test"}, {"id": 13, "type": "test"}, {"id": 14, "type": "test"}, {"id": 15, "type": "test"}, {"id": 16, "type": "test"}, {"id": 17, "type": "test"}, {"id": 18, "type": "test"}, {"id": 19, "type": "test"}, {"id": 20, "type": "test"}, {"id": 21, "type": "test"}, {"id": 22, "type": "test"}, {"id": 23, "type": "test"}, {"id": 24, "type": "test"}, {"id": 25, "type": "test"}, {"id": 26, "type": "test"}, {"id": 27, "type": "test"}, {"id": 28, "type": "test"}, {"id": 29, "type": "test"}, {"id": 30, "type": "test"}, {"id": 31, "type": "test"}, {"id": 32, "type": "test"}, {"id": 33, "type": "test"}, {"id": 34, "type": "test"}, {"id": 35, "type": "test"}, {"id": 36, "type": "test"}, {"id": 37, "type": "test"}, {"id": 38, "type": "test"}, {"id": 39, "type": "test"}, {"id": 40, "type": "test"}, {"id": 41, "type": "test"}, {"id": 42, "type": "test"}, {"id": 43, "type": "test"}, {"id": 44, "type": "test"}, {"id": 45, "type": "test"}, {"id": 46, "type": "test"}, {"id": 47, "type": "test"}, {"id": 48, "type": "test"}, {"id": 49, "type": "test"}, {"id": 50, "type": "test"}, {"id": 51, "type": "test"}, {"id": 52, "type": "test"}, {"id": 53, "type": "test"}, {"id": 54, "type": "test"}, {"id": 55, "type": "test"}, {"id": 56, "type": "test"}, {"id": 57, "type": "test"}, {"id": 58, "type": "test"}, {"id": 59, "type": "test"}, {"id": 60, "type": "test"}, {"id": 61, "type": "test"}, {"id": 62, "type": "test"}, {"id": 63, "type": "test"}, {"id": 64, "type": "test"}, {"id": 65, "type": "test"}, {"id": 66, "type": "test"}, {"id": 67, "type": "test"}, {"id": 68, "type": "test"}, {"id": 69, "type": "test"}, {"id": 70, "type": "test"}]}}}], "included": [{"id": 1, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_mode_params", "duration": 0.0007582080288557336, "run_index": 0, "setup": {"name": "setup", "duration": 0.00032837501203175634, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_mode_params>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x10668c650>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 0.00010145800479222089, "outcome": "passed"}, "outcome": "error"}}, {"id": 2, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_channel_membership_errors01", "duration": 0.0003867919876938686, "run_index": 1, "setup": {"name": "setup", "duration": 0.00015049999637994915, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_errors01>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066faa10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 8.579199493397027e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 3, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_channel_membership_errors02", "duration": 0.00033516700204927474, "run_index": 2, "setup": {"name": "setup", "duration": 0.0001286670012632385, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_errors02>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cd44d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 7.783299952279776e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 4, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_channel_membership_errors03", "duration": 0.0003461659944150597, "run_index": 3, "setup": {"name": "setup", "duration": 0.00013000000035390258, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_errors03>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066caa10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 8.616599370725453e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 5, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_channel_membership_errors04", "duration": 0.0002872100012609735, "run_index": 4, "setup": {"name": "setup", "duration": 0.00011570900096558034, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_errors04>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cac6d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 5.5791999329812825e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 6, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestBasicMODE::test_channel_membership_errors05", "duration": 0.00026954100758302957, "run_index": 5, "setup": {"name": "setup", "duration": 0.00010520800424274057, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_errors05>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f9a50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_MODE"}, {"category": "BASIC_MODE"}], "teardown": {"name": "teardown", "duration": 5.9124999097548425e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 7, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator01", "duration": 0.00031216698698699474, "run_index": 6, "setup": {"name": "setup", "duration": 0.00012429199705366045, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator01>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066de890>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 6.358299287967384e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 8, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator02", "duration": 0.00027533300453796983, "run_index": 7, "setup": {"name": "setup", "duration": 0.00010870800178963691, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator02>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cc7550>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 5.791700095869601e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 9, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator03", "duration": 0.00025466700026299804, "run_index": 8, "setup": {"name": "setup", "duration": 9.687499550636858e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator03>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x10669de10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 6.091700925026089e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 10, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator04", "duration": 0.0002518330147722736, "run_index": 9, "setup": {"name": "setup", "duration": 9.887501073535532e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator04>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f6950>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 5.4082993301562965e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 11, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator05", "duration": 0.0002594590332591906, "run_index": 10, "setup": {"name": "setup", "duration": 9.737501386553049e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator05>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106728dd0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 6.470900552812964e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 12, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator06", "duration": 0.0002669180103112012, "run_index": 11, "setup": {"name": "setup", "duration": 0.00010766700142994523, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator06>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f26d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 5.1584007451310754e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 13, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelOperator::test_channel_operator07", "duration": 0.0002801669907057658, "run_index": 12, "setup": {"name": "setup", "duration": 9.566699736751616e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_operator07>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x105991710>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_CHANNEL_OPERATOR"}, {"category": "BASIC_CHANNEL_OPERATOR"}], "teardown": {"name": "teardown", "duration": 8.883299597073346e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 14, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestOPER::test_oper1", "duration": 0.0002955000090878457, "run_index": 13, "setup": {"name": "setup", "duration": 0.00011837499914690852, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_oper1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c9d650>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_IRC_OPERATOR"}, {"category": "BASIC_IRC_OPERATOR"}], "teardown": {"name": "teardown", "duration": 5.875001079402864e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 15, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestOPER::test_oper2", "duration": 0.0002662490005604923, "run_index": 14, "setup": {"name": "setup", "duration": 9.89580003079027e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_oper2>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c74310>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_IRC_OPERATOR"}, {"category": "BASIC_IRC_OPERATOR"}], "teardown": {"name": "teardown", "duration": 6.833299994468689e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 16, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestOPER::test_oper_params", "duration": 0.00025366600311826915, "run_index": 15, "setup": {"name": "setup", "duration": 0.00010083300003316253, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_oper_params>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c699d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_IRC_OPERATOR"}, {"category": "BASIC_IRC_OPERATOR"}], "teardown": {"name": "teardown", "duration": 5.200000305194408e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 17, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsOPERBasic::test_permissions_oper_basic1", "duration": 0.0002622909814817831, "run_index": 16, "setup": {"name": "setup", "duration": 9.420799324288964e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_oper_basic1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d0dd90>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "BASIC_IRC_OPERATOR"}, {"category": "BASIC_IRC_OPERATOR"}], "teardown": {"name": "teardown", "duration": 7.38749949960038e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 18, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode01", "duration": 0.00027079301071353257, "run_index": 17, "setup": {"name": "setup", "duration": 0.00010995900083798915, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode01>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cca750>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.0875009037554264e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 19, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode02", "duration": 0.0002503740106476471, "run_index": 18, "setup": {"name": "setup", "duration": 9.679100185167044e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode02>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1067caf50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.6792006944306195e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 20, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode03", "duration": 0.0002624990011099726, "run_index": 19, "setup": {"name": "setup", "duration": 9.958300506696105e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode03>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066ca510>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.33329909760505e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 21, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode04", "duration": 0.00026025201077573, "run_index": 20, "setup": {"name": "setup", "duration": 0.00010333400859963149, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode04>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d3c190>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.358399357646704e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 22, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode05", "duration": 0.00025145799736492336, "run_index": 21, "setup": {"name": "setup", "duration": 9.412500367034227e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode05>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066fa850>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.320799002423882e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 23, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode06", "duration": 0.0002627929934533313, "run_index": 22, "setup": {"name": "setup", "duration": 0.00010233400098513812, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode06>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f1a50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.8124991483055055e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 24, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode07", "duration": 0.0002813349856296554, "run_index": 23, "setup": {"name": "setup", "duration": 0.00010783399920910597, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode07>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106ce7050>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.566698721144348e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 25, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode08", "duration": 0.0002756670000962913, "run_index": 24, "setup": {"name": "setup", "duration": 0.00010674999793991446, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode08>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c844d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.216700421646237e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 26, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode09", "duration": 0.0002706239902181551, "run_index": 25, "setup": {"name": "setup", "duration": 0.00010395799472462386, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode09>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cb98d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.270800076890737e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 27, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode10", "duration": 0.0002654160052770749, "run_index": 26, "setup": {"name": "setup", "duration": 0.00010737500269897282, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode10>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f45d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.066599987912923e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 28, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode11", "duration": 0.00025987401022575796, "run_index": 27, "setup": {"name": "setup", "duration": 9.533300180919468e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode11>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cd5590>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.920800660736859e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 29, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestUserMODE::test_user_mode12", "duration": 0.00025933301367331296, "run_index": 28, "setup": {"name": "setup", "duration": 0.00010412500705569983, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_user_mode12>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cdaa90>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.108299956191331e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 30, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode01", "duration": 0.00025387396453879774, "run_index": 29, "setup": {"name": "setup", "duration": 9.55829891609028e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode01>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x10679cd50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.270798621699214e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 31, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode02", "duration": 0.0002734580193646252, "run_index": 30, "setup": {"name": "setup", "duration": 0.00011170801008120179, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode02>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d0dcd0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.004199920222163e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 32, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode03", "duration": 0.0002524570154491812, "run_index": 31, "setup": {"name": "setup", "duration": 9.370800398755819e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode03>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d067d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.504100747406483e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 33, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode04", "duration": 0.00027441600104793906, "run_index": 32, "setup": {"name": "setup", "duration": 0.00011095800437033176, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode04>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c9dc50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.2499992307275534e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 34, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode05", "duration": 0.0002637489960761741, "run_index": 33, "setup": {"name": "setup", "duration": 9.858299745246768e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode05>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c75f50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.658300117123872e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 35, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode06", "duration": 0.0002702089986996725, "run_index": 34, "setup": {"name": "setup", "duration": 0.00010262499563395977, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode06>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d2bb90>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.495900743175298e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 36, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode07", "duration": 0.00026504098786972463, "run_index": 35, "setup": {"name": "setup", "duration": 0.00010395799472462386, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode07>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066c87d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.7124998420476913e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 37, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode08", "duration": 0.00027958200371358544, "run_index": 36, "setup": {"name": "setup", "duration": 0.00011245800124015659, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode08>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066ba350>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.4666001233272254e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 38, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode09", "duration": 0.0002564589958637953, "run_index": 37, "setup": {"name": "setup", "duration": 9.362499986309558e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode09>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c6bf10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.920899613760412e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 39, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode10", "duration": 0.0002740829950198531, "run_index": 38, "setup": {"name": "setup", "duration": 0.00010925000242423266, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode10>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d40e50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.558299017138779e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 40, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode11", "duration": 0.00023645699548069388, "run_index": 39, "setup": {"name": "setup", "duration": 9.454099927097559e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode11>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d3e790>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 4.73749969387427e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 41, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode12", "duration": 0.00025391700910404325, "run_index": 40, "setup": {"name": "setup", "duration": 9.225000394508243e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode12>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cae310>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.941700121387839e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 42, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode13", "duration": 0.0002757500042207539, "run_index": 41, "setup": {"name": "setup", "duration": 0.00010925000242423266, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode13>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066fa850>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.7249999372288585e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 43, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode14", "duration": 0.0002824580005835742, "run_index": 42, "setup": {"name": "setup", "duration": 9.425000462215394e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode14>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106749790>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 9.39579913392663e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 44, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode15", "duration": 0.0003005009930348024, "run_index": 43, "setup": {"name": "setup", "duration": 0.00012591699487529695, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode15>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066dd3d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 4.8667003284208477e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 45, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode16", "duration": 0.0002595000114524737, "run_index": 44, "setup": {"name": "setup", "duration": 9.26670036278665e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode16>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c767d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 7.416600419674069e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 46, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode17", "duration": 0.0003160419873893261, "run_index": 45, "setup": {"name": "setup", "duration": 0.00012299999070819467, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode17>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f6790>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 7.004200597293675e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 47, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMODE::test_channel_mode18", "duration": 0.0002778769994620234, "run_index": 46, "setup": {"name": "setup", "duration": 0.00010595899948384613, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_mode18>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106728950>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.595900049433112e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 48, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMembershipMODE::test_channel_membership_mode01", "duration": 0.0002663770137587562, "run_index": 47, "setup": {"name": "setup", "duration": 0.00010645900329109281, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_mode01>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cd6250>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.3459007176570594e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 49, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMembershipMODE::test_channel_membership_mode02", "duration": 0.00024558400036767125, "run_index": 48, "setup": {"name": "setup", "duration": 9.416700049769133e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_mode02>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x10679eb50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.7249999372288585e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 50, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMembershipMODE::test_channel_membership_mode03", "duration": 0.0002691250265343115, "run_index": 49, "setup": {"name": "setup", "duration": 0.00010250000923406333, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_mode03>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1067a0190>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.412500806618482e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 51, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMembershipMODE::test_channel_membership_mode04", "duration": 0.0002619159931782633, "run_index": 50, "setup": {"name": "setup", "duration": 9.92499990388751e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_mode04>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d657d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.34159951005131e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 52, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestChannelMembershipMODE::test_channel_membership_mode05", "duration": 0.00027179199969395995, "run_index": 51, "setup": {"name": "setup", "duration": 0.0001049999991664663, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_channel_membership_mode05>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d15610>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.179200136102736e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 53, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_privmsg1", "duration": 0.00025883197668008506, "run_index": 52, "setup": {"name": "setup", "duration": 9.916599083226174e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_privmsg1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106ccdf50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.049999501556158e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 54, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_privmsg2", "duration": 0.00025408399233128875, "run_index": 53, "setup": {"name": "setup", "duration": 9.391699859406799e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_privmsg2>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106caf850>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 6.624999514315277e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 55, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_privmsg3", "duration": 0.00027041697467211634, "run_index": 54, "setup": {"name": "setup", "duration": 0.0001101669913623482, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_privmsg3>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d3ea50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.008299194741994e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 56, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_privmsg4", "duration": 0.0002475400106050074, "run_index": 55, "setup": {"name": "setup", "duration": 9.566600783728063e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_privmsg4>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cde110>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.620799493044615e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 57, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_privmsg5", "duration": 0.00024904099700506777, "run_index": 56, "setup": {"name": "setup", "duration": 9.76250012172386e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_privmsg5>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1067c6910>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 5.3790994570590556e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 58, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsPRIVMSG::test_permissions_notice", "duration": 0.00027558401052374393, "run_index": 57, "setup": {"name": "setup", "duration": 9.891700756270438e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_notice>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106c6b890>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES"}, {"category": "MODES"}], "teardown": {"name": "teardown", "duration": 7.774999539833516e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 59, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsTOPIC::test_permissions_topic1", "duration": 0.00028654298512265086, "run_index": 58, "setup": {"name": "setup", "duration": 0.00011470899335108697, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_topic1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cd7d50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES_TOPIC"}, {"category": "MODES_TOPIC"}], "teardown": {"name": "teardown", "duration": 5.7124998420476913e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 60, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsTOPIC::test_permissions_topic2", "duration": 0.0002688750100787729, "run_index": 59, "setup": {"name": "setup", "duration": 0.0001009580009849742, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_topic2>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f5b10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "MODES_TOPIC"}, {"category": "MODES_TOPIC"}], "teardown": {"name": "teardown", "duration": 6.695900810882449e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 61, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsOPER::test_permissions_oper1", "duration": 0.0002601649903226644, "run_index": 60, "setup": {"name": "setup", "duration": 0.00010541599476709962, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_oper1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cda210>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "OPER"}, {"category": "OPER"}], "teardown": {"name": "teardown", "duration": 4.933300078846514e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 62, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsOPER::test_permissions_oper2", "duration": 0.00024749997828621417, "run_index": 61, "setup": {"name": "setup", "duration": 9.22499893931672e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_oper2>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d2b450>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "OPER"}, {"category": "OPER"}], "teardown": {"name": "teardown", "duration": 6.299999949987978e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 63, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsOPER::test_permissions_oper3", "duration": 0.00028979001217521727, "run_index": 62, "setup": {"name": "setup", "duration": 0.00011591600195970386, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_oper3>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d14310>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "OPER"}, {"category": "OPER"}], "teardown": {"name": "teardown", "duration": 5.7958008255809546e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 64, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestPermissionsOPER::test_permissions_oper4", "duration": 0.00025687500601634383, "run_index": 63, "setup": {"name": "setup", "duration": 9.89580003079027e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_permissions_oper4>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d71490>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "OPER_TOPIC"}, {"category": "OPER_TOPIC"}], "teardown": {"name": "teardown", "duration": 5.8959005400538445e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 65, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away1", "duration": 0.0002843750116880983, "run_index": 64, "setup": {"name": "setup", "duration": 0.00010895800369326025, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away1>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x1066f29d0>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 6.64590043015778e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 66, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away2", "duration": 0.00026508398877922446, "run_index": 65, "setup": {"name": "setup", "duration": 0.00010666699381545186, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away2>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cafb50>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 5.1750001148320735e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 67, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away3", "duration": 0.0002528340119170025, "run_index": 66, "setup": {"name": "setup", "duration": 9.48750093812123e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away3>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d5f510>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 6.308399315457791e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 68, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away4", "duration": 0.0002828339929692447, "run_index": 67, "setup": {"name": "setup", "duration": 0.0001126669958466664, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away4>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106cc0190>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 5.750000127591193e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 69, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away5", "duration": 0.0002455830108374357, "run_index": 68, "setup": {"name": "setup", "duration": 9.85000078799203e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away5>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106d7ba10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 4.8582995077595115e-05, "outcome": "passed"}, "outcome": "error"}}, {"id": 70, "type": "test", "attributes": {"name": "chirc/tests/single_server/test_modes.py::TestAWAY::test_away6", "duration": 0.0007647080346941948, "run_index": 69, "setup": {"name": "setup", "duration": 9.295801282860339e-05, "outcome": "error", "longrepr": "request = <SubRequest 'irc_session' for <Function test_away6>>\n\n    @pytest.fixture\n    def irc_session(request):\n        chirc_exe = request.config.getoption(\"--chirc-exe\")\n        chirc_loglevel = request.config.getoption(\"--chirc-loglevel\")\n        chirc_port = request.config.getoption(\"--chirc-port\")\n        external_chirc_port = request.config.getoption(\"--chirc-external-port\")\n    \n>       session = SingleIRCSession(chirc_exe=chirc_exe,\n                                   loglevel=chirc_loglevel,\n                                   chirc_port=chirc_port,\n                                   external_chirc_port=external_chirc_port)\n\ntests/chirc/tests/single_server/conftest.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <chirc.tests.common.sessions.SingleIRCSession object at 0x106ce4e10>, chirc_exe = '../build/chirc', msg_timeout = 0.1, chirc_port = -1, loglevel = 0, debug = False, irc_network = None\nirc_network_server = None, external_chirc_port = None\n\n    def __init__(self, chirc_exe = None, msg_timeout = 0.1,\n                 chirc_port = None, loglevel = -1, debug = False,\n                 irc_network = None, irc_network_server = None, external_chirc_port=None):\n        if chirc_exe is None:\n            self.chirc_exe = \"../build/chirc\"\n        else:\n            self.chirc_exe = chirc_exe\n    \n        if not (os.path.exists(self.chirc_exe) and os.path.isfile(self.chirc_exe) and os.access(self.chirc_exe, os.X_OK)):\n>           raise RuntimeError(\"{} does not exist or it is not executable\".format(self.chirc_exe))\nE           RuntimeError: ../build/chirc does not exist or it is not executable\n\ntests/chirc/tests/common/sessions.py:36: RuntimeError"}, "metadata": [{"category": "AWAY"}, {"category": "AWAY"}], "teardown": {"name": "teardown", "duration": 0.000578792009036988, "outcome": "passed"}, "outcome": "error"}}]}